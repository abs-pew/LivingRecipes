package de.neuefische.backend.service;

import de.neuefische.backend.dto.RecipeDto;
import de.neuefische.backend.model.Recipe;
import de.neuefische.backend.repository.RecipeRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.util.*;


@Service
public class RecipeService {
    private final RecipeRepository recipeRepo;
    private final AutoGeneratedValuesService autoGeneratedValuesService;

    public RecipeService(RecipeRepository recipeRepo, AutoGeneratedValuesService autoGeneratedValuesService) {
        this.recipeRepo = recipeRepo;
        this.autoGeneratedValuesService = autoGeneratedValuesService;
    }

//    private final Map<String, Recipe> recipesList = new HashMap<>(Map.of("001",
//            new Recipe("001", "Butter Chicken", 45,
//                    List.of(
//                            new Ingredient("boneless chicken", 1000, UnitsList.GRAM),
//                            new Ingredient("butter", 100, UnitsList.GRAM),
//                            new Ingredient("salt", 10, UnitsList.GRAM)),
//            "put all ingredients together in a pot and cook them well",
//            "images link here",
//            LocalDateTime.now(),  "VEGAN")));

    public List<Recipe> getAllRecipes() {
        return recipeRepo.findAll();
    //    return recipesList.values().stream().collect(Collectors.toList());
    }


    public Recipe addRecipe(RecipeDto recipeDto) {
        String id = autoGeneratedValuesService.generateRandomId();
        LocalDateTime createdAt = autoGeneratedValuesService.currentLocalDateTime();
        String category = autoGeneratedValuesService.getCategory();
        Recipe recipeToSave = recipeDto.createNewRecipe(id, createdAt, category);
        return recipeRepo.save(recipeToSave);
    }
}

